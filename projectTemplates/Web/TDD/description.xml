<?xml version="1.0" encoding="UTF-8"?>
<tns:projectTemplate xmlns:tns="http://fdt.powerflasher.com/ProjectTemplate"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://fdt.powerflasher.com/ProjectTemplate ../../projectTemplate.xsd">
	<name>Web TDD</name>
	<version>2.5</version>
	<description>${targetPlatform} project type.</description>
	<projectType>${projectType}</projectType>
	<variables>
		<primaryGroup label="">	
			<group label="Application Setup">
				<variable name="appId" label="Default Package:" default="com.powerflasher.SampleApp"
					type="string" />				
				<variable name="htmlTemplate" label="Include HTML Wrapper" default="false" type="boolean" />			
			</group>
			<group label="Project Setup">
				<variable name="selectedSDK" label="Default SDK" default="_highest" type="sdk(3.6,4.9,1.5,4)" />									
				<variable name="useFlex" label="Add Flex Framework" default="false" type="boolean" />
				<variable name="useTDD" label="Add Unit Test Framework" default="false" type="boolean" />								
			</group>
		</primaryGroup>				
	</variables>
	<expressions>
		<expression name="missingSDKWarning">This template requires the Flex 3.6 SDK or later.</expression>
		<expression name="hasMinimumSDK" value="sdkVersionExists('3.6','4.9')"/>
		<expression name="templateError" value="if(!${hasMinimumSDK},${missingSDKWarning},'')"/>				
		<expression name="projectType" value="if(${useFlex},'Web Flex','Web')" />
		<expression name="targetPlatform" value="'Web'" />
		<expression name="preferredSdk" value="${selectedSDK}"/>		
		<expression name="postFileName" value="replaceRegex(${projectName}, '([^\w]+)', '')" />
		<expression name="fileName" value="replaceRegex(${postFileName}, '(^\d+)', '')" />
		<expression name="packageStructure" value="replaceRegex(${appId}, '([.]+)', '/')" />		
		<expression name='isFlex3' value="sdkHasLib(${selectedSDK},'frameworks/libs/framework.swc') &amp;&amp; ${useFlex}"/>		
		<expression name='isFlex4' value="sdkHasLib(${selectedSDK},'frameworks/libs/mx/mx.swc')  &amp;&amp; ${useFlex}"/>		
		<expression name="sourceFolder" value="src" />	
		<expression name="outputFolder" value="bin" />				
		<expression name="autoLibFolder" value="lib" />				
	</expressions>
	<folders>
		<sourceFolder>${sourceFolder}</sourceFolder>
		<sourceFolder>test-src</sourceFolder>
		<outputFolder>${outputFolder}</outputFolder>
		<autoLibFolder>${autoLibFolder}</autoLibFolder>
	</folders>

	<contentCreation processFileExtensions="mxml,xml,launch,properties,as,html">
		<!-- If AS -->
		<file src="as/start.as" dest="${sourceFolder}/${packageStructure}/${fileName}.as" if="!${useFlex}"/>		
		<!-- If Flex 3 -->
		<file src="mxml/blank_mx.mxml" dest="${sourceFolder}/${packageStructure}/${fileName}.mxml" if="${isFlex3}"/>
		<!-- If Flex 4 -->
		<file src="mxml/blank_spark.mxml" dest="${sourceFolder}/${packageStructure}/${fileName}.mxml" if="${isFlex4}"/>	
		
		<!-- If HTML Wrapper -->
		<folder src="html-wrapper" dest="${outputFolder}" if="${htmlTemplate}"
			process="true" recursive="true" />
			
		<!-- If Unit Testing -->Si
		<folder src="unitTesting/swc" dest="${autoLibFolder}" if="${useTDD}" process="true" recursive="true" />
		<file src="as/TestRunner.as" dest="test-src/TestRunner.as" if="${useTDD} &amp;&amp; !${useFlex}"/>
		<file src="mxml/SparkRunner.mxml" dest="test-src/TestRunner.mxml" if="${useTDD} &amp;&amp; ${useFlex}"/>
		<file src="as/SimpleTest.as" dest="test-src/test/SimpleTest.as" if="${useTDD}"/>
					
	</contentCreation>
</tns:projectTemplate>

